{"version":3,"file":"static/js/349.20b1ed3f.chunk.js","mappings":"0NAEaA,EAAOC,EAAAA,EAAAA,GAAH,yPAWJC,EAAOD,EAAAA,EAAAA,GAAH,waAeJE,EAAQF,EAAAA,EAAAA,IAAH,mGAOLG,EAAQH,EAAAA,EAAAA,EAAH,mE,SC/BLI,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvBC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,SAACR,EAAD,UACGM,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAACV,EAAD,WACE,UAAC,KAAD,CAAMW,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,WACE,SAACJ,EAAD,CAAOa,IAPA,iCAOgBJ,EAAaK,IAAKN,KACzC,SAACP,EAAD,UAAQO,GAAgB,YAHjBD,EADD,KAUjB,C,8ECjBYQ,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,GAGd,C,iKCdYtB,E,QAAQH,EAAAA,GAAH,yF,SCsClB,EAlCa,WACX,OAA4B0B,EAAAA,EAAAA,UAAS,IAArC,eAAOrB,EAAP,KAAesB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAqB,mCAAG,8FAE1BJ,GAAa,GAFa,KAG1BF,EAH0B,UAGVO,EAAAA,EAAAA,MAHU,kFAK1BH,EAAS,EAAD,IALkB,yBAO1BF,GAAa,GAPa,4EAAH,qDAW3BI,GACD,GAAE,KAGD,gCACGL,IAAa,SAACX,EAAA,EAAD,IACK,IAAlBZ,EAAO8B,SACN,iCACE,SAAChC,EAAD,UAAO,oBACP,SAACC,EAAA,EAAD,CAAcC,OAAQA,OAGzByB,GAASM,MAAM,gCAGrB,ECrCD,G,mMCCAC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,6NACFA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,OAA0C,mBAEnC,IAAMH,EAAiB,mCAAG,sGACRG,EAAAA,EAAAA,IAAU,sBADF,uBACvBC,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,oBADM,uBACrBH,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfI,EAAc,mCAAG,WAAMC,GAAN,yFACLN,EAAAA,EAAAA,IAAA,8BACEM,EADF,gDADK,uBACpBL,EADoB,EACpBA,KADoB,kBAKrBA,EAAKC,SALgB,2CAAH,sDAQdK,EAAO,mCAAG,WAAMH,GAAN,yFACEJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,4BADF,uBACbH,EADa,EACbA,KADa,kBAGdA,EAAKO,MAHS,2CAAH,sDAMPC,EAAU,mCAAG,WAAML,GAAN,yFACDJ,EAAAA,EAAAA,IAAA,gBACZI,EADY,mCADC,uBAChBH,EADgB,EAChBA,KADgB,kBAKjBA,EAAKC,SALY,2CAAH,qD","sources":["components/ListOfMovies/ListOfMovies.styled.jsx","components/ListOfMovies/ListOfMovies.jsx","components/Loader/Loader.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","pages/Home/index.js","servises/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding-top: 20px;\n  display: grid;\n  max-width: 1900px;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 40px;\n  -ms-grid-column-align: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Item = styled.li`\n  size: 20px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.4),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.4), 0px 1px 10px 0px rgba(0, 0, 0, 0.4);\n  transition: color, box-shadow 250ms linear;\n\n  &:hover,\n  :focus {\n    color: #de0b74;\n    box-shadow: 0px 2px 4px -1px rgba(225, 77, 114, 0.4),\n      0px 4px 5px 0px rgba(225, 77, 114, 0.4),\n      0px 1px 10px 0px rgba(225, 77, 114, 0.4);\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 390px;\n  margin-bottom: 8px;\n  z-index: 9999;\n`;\n\nexport const Title = styled.p`\n  font-size: 20px;\n  text-align: center;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Item, List, Image, Title } from './ListOfMovies.styled';\nimport PropTypes from 'prop-types';\n\nexport const ListOfMovies = ({ movies }) => {\n  const location = useLocation();\n  const BASE_URL = 'http://image.tmdb.org/t/p/w500';\n\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <Image src={BASE_URL + poster_path} alt={title} />\n            <Title>{title ? title : '...'}</Title>\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nListOfMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.number,\n      to: PropTypes.string,\n      movieId: PropTypes.number,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import { ThreeDots } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#de0b74\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n\nLoader.propTypes = {\n  height: PropTypes.string,\n  width: PropTypes.string,\n  radius: PropTypes.number,\n  color: PropTypes.string,\n  ariaLabel: PropTypes.string,\n  wrapperStyle: PropTypes.object,\n  wrapperClassName: PropTypes.string,\n  visible: PropTypes.bool,\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  margin-bottom: 12px;\n  font-size: 44px;\n  font-weight: 400;\n`;\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from '../../servises/api';\nimport { ListOfMovies } from 'components/ListOfMovies';\nimport { Loader } from 'components/Loader';\nimport { Title } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getTrendingMoviesData = async () => {\n      try {\n        setIsLoading(true);\n        setMovies(await getTrendingMovies());\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getTrendingMoviesData();\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {movies.length !== 0 && (\n        <>\n          <Title>Trending today</Title>\n          <ListOfMovies movies={movies} />\n        </>\n      )}\n      {error && alert('Sorry, something is wrong!')}\n    </>\n  );\n};\n\nexport default Home;\n","import Home from './Home.jsx';\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0NzhhYjBlYjNmYjE0YzA0ODc2YzI1YmIxNDI0M2NiZCIsInN1YiI6IjY0ZDE2MzYyNmQ0Yzk3MDBlYzU4YjNlNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wkZrfHNayLG0He9kinamYKtKq9Py8-TCiR3q_k01mNs';\naxios.defaults.headers.common['accept'] = 'application/json';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get('trending/movie/day');\n\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?language=en-US`);\n\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await axios.get(\n    `/search/movie?query=${query}&include_adult=false&language=en-US&page=1}`\n  );\n\n  return data.results;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits?language=en-US`);\n\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?language=en-US&page=1`\n  );\n\n  return data.results;\n};\n"],"names":["List","styled","Item","Image","Title","ListOfMovies","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","getTrendingMoviesData","getTrendingMovies","length","alert","axios","data","results","getMovieDetails","movieId","getSearchMovie","query","getCast","cast","getReviews"],"sourceRoot":""}